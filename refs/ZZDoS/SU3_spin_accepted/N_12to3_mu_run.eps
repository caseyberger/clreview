%!PS-Adobe-2.0 EPSF-2.0
%%Title: N_12to3_mu_run.tex
%%Creator: gnuplot 4.6 patchlevel 4
%%CreationDate: Wed Apr 20 13:39:05 2016
%%DocumentFonts: 
%%BoundingBox: 50 50 338 266
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 0.6 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 10.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -33 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 338 50 lineto 338 266 lineto 50 266 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.6 (September 2012)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (N_12to3_mu_run.tex)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 4)
  /Author (mario)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Apr 20 13:39:05 2016)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
1.000 UL
LTb
LCb setrgbcolor
685 816 M
63 0 V
4831 0 R
-63 0 V
stroke
LTb
685 1299 M
63 0 V
4831 0 R
-63 0 V
685 1782 M
63 0 V
4831 0 R
-63 0 V
685 2266 M
63 0 V
4831 0 R
-63 0 V
685 2749 M
63 0 V
4831 0 R
-63 0 V
685 3232 M
63 0 V
4831 0 R
-63 0 V
685 3716 M
63 0 V
4831 0 R
-63 0 V
685 4199 M
63 0 V
4831 0 R
-63 0 V
745 574 M
0 63 V
0 3562 R
0 -63 V
1350 574 M
0 63 V
0 3562 R
0 -63 V
1954 574 M
0 63 V
0 3562 R
0 -63 V
2558 574 M
0 63 V
0 3562 R
0 -63 V
3162 574 M
0 63 V
0 3562 R
0 -63 V
3766 574 M
0 63 V
0 3562 R
0 -63 V
4371 574 M
0 63 V
0 3562 R
0 -63 V
4975 574 M
0 63 V
0 3562 R
0 -63 V
5579 574 M
0 63 V
0 3562 R
0 -63 V
stroke
685 4199 N
685 574 L
4894 0 V
0 3625 V
-4894 0 V
Z stroke
1.000 UP
1.000 UL
LTb
1.000 UP
2.100 UL
LT0
LC0 setrgbcolor
LCb setrgbcolor
LT0
LC0 setrgbcolor
5216 3960 M
303 0 V
-303 31 R
0 -62 V
303 62 R
0 -62 V
866 966 M
0 8 V
-31 -8 R
62 0 V
-62 8 R
62 0 V
90 146 R
0 18 V
-31 -18 R
62 0 V
-62 18 R
62 0 V
90 135 R
0 26 V
-31 -26 R
62 0 V
-62 26 R
62 0 V
90 128 R
0 36 V
-31 -36 R
62 0 V
-62 36 R
62 0 V
90 124 R
0 45 V
-31 -45 R
62 0 V
-62 45 R
62 0 V
89 125 R
0 56 V
-31 -56 R
62 0 V
-62 56 R
62 0 V
90 99 R
0 66 V
-31 -66 R
62 0 V
-62 66 R
62 0 V
90 93 R
0 75 V
-31 -75 R
62 0 V
-62 75 R
62 0 V
90 98 R
0 86 V
-31 -86 R
62 0 V
-62 86 R
62 0 V
90 65 R
0 96 V
-31 -96 R
62 0 V
-62 96 R
62 0 V
90 52 R
0 108 V
-31 -108 R
62 0 V
-62 108 R
62 0 V
89 103 R
0 124 V
-31 -124 R
62 0 V
-62 124 R
62 0 V
90 50 R
0 140 V
-31 -140 R
62 0 V
-62 140 R
62 0 V
90 32 R
0 156 V
-31 -156 R
62 0 V
-62 156 R
62 0 V
90 -25 R
0 170 V
-31 -170 R
62 0 V
-62 170 R
62 0 V
90 -12 R
0 192 V
-31 -192 R
62 0 V
-62 192 R
62 0 V
90 14 R
0 225 V
-31 -225 R
62 0 V
stroke 2831 3595 M
-62 225 R
62 0 V
90 -200 R
0 237 V
-31 -237 R
62 0 V
-62 237 R
62 0 V
89 -274 R
0 239 V
-31 -239 R
62 0 V
-62 239 R
62 0 V
90 -84 R
0 286 V
-31 -286 R
62 0 V
-62 286 R
62 0 V
90 -416 R
0 272 V
-31 -272 R
62 0 V
-62 272 R
62 0 V
90 -495 R
0 224 V
-31 -224 R
62 0 V
-62 224 R
62 0 V
90 -636 R
0 147 V
-31 -147 R
62 0 V
-62 147 R
62 0 V
90 -809 R
0 58 V
-31 -58 R
62 0 V
-62 58 R
62 0 V
89 -511 R
0 26 V
-31 -26 R
62 0 V
-62 26 R
62 0 V
90 -209 R
0 34 V
-31 -34 R
62 0 V
-62 34 R
62 0 V
90 -111 R
0 29 V
-31 -29 R
62 0 V
-62 29 R
62 0 V
90 -85 R
0 24 V
-31 -24 R
62 0 V
-62 24 R
62 0 V
90 -45 R
0 25 V
-31 -25 R
62 0 V
-62 25 R
62 0 V
90 -74 R
0 43 V
-31 -43 R
62 0 V
-62 43 R
62 0 V
89 -56 R
0 40 V
-31 -40 R
62 0 V
-62 40 R
62 0 V
90 -24 R
0 44 V
-31 -44 R
62 0 V
-62 44 R
62 0 V
90 -31 R
0 45 V
-31 -45 R
62 0 V
-62 45 R
62 0 V
90 -49 R
0 47 V
-31 -47 R
62 0 V
-62 47 R
62 0 V
stroke 4885 1531 M
90 -30 R
0 54 V
-31 -54 R
62 0 V
-62 54 R
62 0 V
90 -49 R
0 63 V
-31 -63 R
62 0 V
-62 63 R
62 0 V
89 -84 R
0 72 V
-31 -72 R
62 0 V
-62 72 R
62 0 V
90 -107 R
0 86 V
-31 -86 R
62 0 V
-62 86 R
62 0 V
90 -23 R
0 152 V
-31 -152 R
62 0 V
-62 152 R
62 0 V
90 -247 R
0 176 V
-31 -176 R
31 0 V
-31 176 R
31 0 V
866 970 Pls
987 1129 Pls
1108 1286 Pls
1229 1445 Pls
1350 1610 Pls
1470 1785 Pls
1591 1945 Pls
1712 2108 Pls
1833 2287 Pls
1954 2443 Pls
2075 2597 Pls
2195 2816 Pls
2316 2998 Pls
2437 3178 Pls
2558 3316 Pls
2679 3485 Pls
2800 3708 Pls
2921 3738 Pls
3041 3703 Pls
3162 3881 Pls
3283 3744 Pls
3404 3497 Pls
3525 3047 Pls
3646 2340 Pls
3766 1871 Pls
3887 1692 Pls
4008 1613 Pls
4129 1554 Pls
4250 1533 Pls
4371 1493 Pls
4491 1479 Pls
4612 1497 Pls
4733 1510 Pls
4854 1508 Pls
4975 1528 Pls
5096 1537 Pls
5216 1521 Pls
5337 1493 Pls
5458 1589 Pls
5579 1506 Pls
5367 3960 Pls
1.000 UP
2.100 UL
LT1
LC1 setrgbcolor
LC2 setrgbcolor
LCb setrgbcolor
LT1
LC1 setrgbcolor
LC2 setrgbcolor
5216 3724 M
303 0 V
-303 31 R
0 -62 V
303 62 R
0 -62 V
866 969 M
0 2 V
-31 -2 R
62 0 V
-62 2 R
62 0 V
90 155 R
0 2 V
-31 -2 R
62 0 V
-62 2 R
62 0 V
90 156 R
0 3 V
-31 -3 R
62 0 V
-62 3 R
62 0 V
90 156 R
0 4 V
-31 -4 R
62 0 V
-62 4 R
62 0 V
90 161 R
0 5 V
-31 -5 R
62 0 V
-62 5 R
62 0 V
89 161 R
0 5 V
-31 -5 R
62 0 V
-62 5 R
62 0 V
90 160 R
0 5 V
-31 -5 R
62 0 V
-62 5 R
62 0 V
90 167 R
0 6 V
-31 -6 R
62 0 V
-62 6 R
62 0 V
90 169 R
0 7 V
-31 -7 R
62 0 V
-62 7 R
62 0 V
90 174 R
0 8 V
-31 -8 R
62 0 V
-62 8 R
62 0 V
90 170 R
0 9 V
-31 -9 R
62 0 V
-62 9 R
62 0 V
89 174 R
0 10 V
-31 -10 R
62 0 V
-62 10 R
62 0 V
90 164 R
0 11 V
-31 -11 R
62 0 V
-62 11 R
62 0 V
90 162 R
0 13 V
-31 -13 R
62 0 V
-62 13 R
62 0 V
90 156 R
0 15 V
-31 -15 R
62 0 V
-62 15 R
62 0 V
90 125 R
0 16 V
-31 -16 R
62 0 V
-62 16 R
62 0 V
90 108 R
0 18 V
-31 -18 R
62 0 V
stroke 2831 3608 M
-62 18 R
62 0 V
90 94 R
0 20 V
-31 -20 R
62 0 V
-62 20 R
62 0 V
89 30 R
0 22 V
-31 -22 R
62 0 V
-62 22 R
62 0 V
90 -11 R
0 26 V
-31 -26 R
62 0 V
-62 26 R
62 0 V
90 -78 R
0 29 V
-31 -29 R
62 0 V
-62 29 R
62 0 V
90 -306 R
0 34 V
-31 -34 R
62 0 V
-62 34 R
62 0 V
90 -512 R
0 39 V
-31 -39 R
62 0 V
-62 39 R
62 0 V
90 -745 R
0 49 V
-31 -49 R
62 0 V
-62 49 R
62 0 V
89 -502 R
0 57 V
-31 -57 R
62 0 V
-62 57 R
62 0 V
90 -240 R
0 64 V
-31 -64 R
62 0 V
-62 64 R
62 0 V
90 -138 R
0 69 V
-31 -69 R
62 0 V
-62 69 R
62 0 V
90 -141 R
0 75 V
-31 -75 R
62 0 V
-62 75 R
62 0 V
90 -131 R
0 80 V
-31 -80 R
62 0 V
-62 80 R
62 0 V
90 -2 R
0 86 V
-31 -86 R
62 0 V
-62 86 R
62 0 V
89 -132 R
0 92 V
-31 -92 R
62 0 V
-62 92 R
62 0 V
90 -106 R
0 97 V
-31 -97 R
62 0 V
-62 97 R
62 0 V
90 -34 R
0 104 V
-31 -104 R
62 0 V
-62 104 R
62 0 V
90 -188 R
0 110 V
-31 -110 R
62 0 V
-62 110 R
62 0 V
stroke 4885 1537 M
90 -100 R
0 117 V
-31 -117 R
62 0 V
-62 117 R
62 0 V
90 -74 R
0 40 V
-31 -40 R
62 0 V
-62 40 R
62 0 V
89 -24 R
0 42 V
-31 -42 R
62 0 V
-62 42 R
62 0 V
90 -9 R
0 44 V
-31 -44 R
62 0 V
-62 44 R
62 0 V
90 -76 R
0 47 V
-31 -47 R
62 0 V
-62 47 R
62 0 V
90 -29 R
0 50 V
-31 -50 R
31 0 V
-31 50 R
31 0 V
866 970 TriD
987 1127 TriD
1108 1285 TriD
1229 1445 TriD
1350 1611 TriD
1470 1776 TriD
1591 1941 TriD
1712 2114 TriD
1833 2290 TriD
1954 2471 TriD
2075 2650 TriD
2195 2833 TriD
2316 3007 TriD
2437 3182 TriD
2558 3352 TriD
2679 3492 TriD
2800 3617 TriD
2921 3730 TriD
3041 3781 TriD
3162 3794 TriD
3283 3744 TriD
3404 3469 TriD
3525 2993 TriD
3646 2292 TriD
3766 1844 TriD
3887 1664 TriD
4008 1593 TriD
4129 1523 TriD
4250 1470 TriD
4371 1551 TriD
4491 1508 TriD
4612 1497 TriD
4733 1563 TriD
4854 1482 TriD
4975 1495 TriD
5096 1500 TriD
5216 1517 TriD
5337 1551 TriD
5458 1520 TriD
5579 1540 TriD
5367 3724 TriD
1.000 UL
LTb
LCb setrgbcolor
685 4199 N
685 574 L
4894 0 V
0 3625 V
-4894 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
